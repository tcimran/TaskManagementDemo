<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:dg="clr-namespace:Maui.DataGrid;assembly=Maui.DataGrid"
             x:Class="TASKMNGMT.Pages.MainPage"
             xmlns:vm="clr-namespace:TASKMNGMT.Models.ViewModels"
             xmlns:xs="clr-namespace:TASKMNGMT.Models"

             x:DataType="vm:MainPageViewModels"
             Title="Task Management">
    <ContentPage.BindingContext>
        <vm:MainPageViewModels />

    </ContentPage.BindingContext>
    <ScrollView>
        <Grid Padding="20" Background="#fff">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition x:Name="ToDoListRow" Height="Auto"/>
            </Grid.RowDefinitions>

            <!--#region Projects-->
            <StackLayout Grid.Row="0" x:Name="TopContainers" Background="#fff">
                <Label Text="Task Management" HorizontalOptions="Center" VerticalOptions="Center" FontSize="Medium"/>
                <StackLayout Orientation="Horizontal" HorizontalOptions="End" VerticalOptions="Start">
                    <Switch 
                        IsToggled="{Binding projectvm.SelectedProject.IsCompleted}"
                        IsEnabled="{Binding projectvm.IsProjectSelected}" 
                        Toggled="Switch_Toggled"
                        />
                    <Picker Title="Select Project" 
                        WidthRequest="150" 
                        ItemsSource="{Binding projectvm.Projects}" 
                        ItemDisplayBinding="{Binding ProjectName}"
                        SelectedItem="{Binding projectvm.SelectedProject}"
                        FontSize="10" IsEnabled="{Binding taskvm.IsnewTask}"/>
                    <Button Text="+" Command="{Binding projectvm.OpenAddProjectPopupCommand}" HeightRequest="10" />
                    <Button Text="-" Command="{Binding projectvm.DeleteProjectCommand}" HeightRequest="10" IsEnabled="{Binding projectvm.IsProjectSelected}"/>
                </StackLayout>
            </StackLayout>
            <!--#endregion-->

            <!--#region TimerUI -->
            <StackLayout Grid.Row="1">
                <Label Text="{Binding taskvm.Timer}" HorizontalOptions="Center" VerticalOptions="Center" FontSize="70"/>
                <StackLayout Orientation="Vertical">
                    <StackLayout Orientation="Horizontal">
                        <Label Text="Current Task :"/>
                        <Label Text="{Binding taskvm.CurrentTask}"/>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal">
                        <Label Text="Task Time (min) :"/>
                        <Label Text="{Binding taskvm.TaskTimer}"/>
                    </StackLayout>
                </StackLayout>

                <Entry Placeholder="Enter Your Task" TextColor="#512BD4" HorizontalTextAlignment="Center" Text="{Binding taskvm.Taskname}" IsEnabled="{Binding taskvm.Isinputable}"/>

                <StackLayout Orientation="Horizontal" HorizontalOptions="Center">
                    <Button Text="{Binding taskvm.StartButtonText}" Margin="10" Command="{Binding taskvm.StartTimerCommand}" IsEnabled="{Binding taskvm.istimer}"/>
                    <Button Text="Stop" Margin="10" Command="{Binding taskvm.StopTimerCommand}" IsEnabled="{Binding taskvm.ispause}"/>
                    <Button Text="Pause" Margin="10" Command="{Binding taskvm.PauseTimerCommand}" IsEnabled="{Binding taskvm.ispause}"/>
                    <Button Text="New Task" Margin="10" IsEnabled="{Binding taskvm.IsnewTask}" Command="{Binding taskvm.AddTaskCommand}"/>
                    <Button Text="Save" Margin="10" Command="{Binding taskvm.SaveTaskCommand}"/>
                    <Button Text="{Binding BtnText}" Margin="10" Command="{Binding ToggleToDoListCommand}" BackgroundColor="{Binding BtnColor}"/>
                </StackLayout>
            </StackLayout>
            <!--#endregion-->


            <!--#region ListViewDataGrid -->
            <StackLayout Grid.Row="2" IsVisible="{Binding isTaskListVisible}" x:Name="mainStackLayout">
                <!--Header Row--> 
                <Grid Padding="10" BackgroundColor="#f0f0f0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Label Text="ID" Grid.Column="0" FontAttributes="Bold" HorizontalTextAlignment="Center"/>
                    <Label Text="Task Name" Grid.Column="1" FontAttributes="Bold" HorizontalTextAlignment="Center"/>
                    <Label Text="Start Time" Grid.Column="2" FontAttributes="Bold" HorizontalTextAlignment="Center"/>
                    <Label Text="End Time" Grid.Column="3" FontAttributes="Bold" HorizontalTextAlignment="Center"/>
                    <Label Text="Time Taken" Grid.Column="4" FontAttributes="Bold" HorizontalTextAlignment="Center"/>
                    <Label Text="Project Name" Grid.Column="5" FontAttributes="Bold" HorizontalTextAlignment="Center"/>


                </Grid>
                <ScrollView HeightRequest="400" BindingContext="{Binding}">
                    <ListView ItemsSource="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModels}},Path=taskvm.Tasks}" SelectionMode="Single" >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell Appearing="OnViewCellAppearing">
                                    <SwipeView>
                                        <SwipeView.LeftItems>
                                            <SwipeItems SwipeBehaviorOnInvoked="Close">
                                                <SwipeItem Text="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModels}},Path=taskvm.BtnStatus}"
                                        BackgroundColor="LightBlue"
                                                           Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModels}},Path=taskvm.EditTaskCommand}"
                                                           CommandParameter="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}}}"
                                    
                                         />
                                                <SwipeItem Text="Delete"
                                         BackgroundColor="LightCoral"
                                         Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModels}},Path=taskvm.DeleteTaskCommand}"
                                         CommandParameter="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}}}"
                                                           
                                                           />
                                            </SwipeItems>
                                        </SwipeView.LeftItems>
                                        <SwipeView.Content>
                                            <Grid Padding="10" x:Name="gridcontent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="*" />

                                                </Grid.ColumnDefinitions>   
                                                <Entry Text="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=id}" Grid.Column="0"  IsReadOnly="True" IsEnabled="False"/>
                                                <Entry Text="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=TaskName}" Grid.Column="1" IsEnabled="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=IsEditable}"/>
                                                <Entry Text="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=TaskStartTime}" Grid.Column="2" IsEnabled="False"/>
                                                <Entry Text="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=TaskEndTime}" Grid.Column="3" IsEnabled="False"/>
                                                <Entry Text="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=TaskTimeTaken}" Grid.Column="4" IsEnabled="False"/>
                                                <!--<Entry Text="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=SelectedProject.ProjectName}" Grid.Column="5"
                                                 IsEnabled="False"
                                                 IsVisible="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModels}},Path=taskvm.showentryfield}"
                                                       
                                                       />  
                                                <Picker 
                                                        ItemsSource="{Binding Source={RelativeSource AncestorType={x:Type vm:MainPageViewModels}},Path=projectvm.Projects}"  
                                                        ItemDisplayBinding="{Binding ProjectName}"
                                                        SelectedItem="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=SelectedProject}" Grid.Column="5"
                                                        FontSize="12"
                                                        IsVisible="{Binding Source={RelativeSource AncestorType={x:Type xs:TaskMang}},Path=IsEditable}"

                                                        />-->

                                            </Grid>
                                        </SwipeView.Content>
                                    </SwipeView>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ScrollView>

            </StackLayout>
            
            <!--#endregion-->

            <!--#region DataGridTask -->
            <!--<StackLayout Grid.Row="2" x:Name="TaskListContainer" IsVisible="{Binding isTaskListVisible}">
                <Label Text="Task List" FontSize="Medium" HorizontalOptions="Center"/>

                --><!--DataGrid--><!--
                <dg:DataGrid
                    BorderColor="DarkBlue"
                    HeaderBackground="#FFF"
                    ItemsSource="{Binding taskvm.Tasks}"
                    SelectionMode="Single"
                    SelectedItem="{Binding taskvm.SelectedItem}"
                    PullToRefreshCommand="{Binding taskvm.RefreashCommandCommand}"
                    IsRefreshing="{Binding taskvm.IsRefreshing}"
                    ActiveRowColor="LightCyan"
                    x:Name="_dataGrid2"
                    PaginationEnabled="{Binding taskvm.IsPagination}"
                    PageSize="5"
                    HeightRequest="280"
    >
                    <dg:DataGrid.Columns>
                        <dg:DataGridColumn Title="id" PropertyName="id" IsVisible="False"/>
                        <dg:DataGridColumn Title="TaskName" PropertyName="TaskName"/>
                        <dg:DataGridColumn Title="TaskStartTime" PropertyName="TaskStartTime"/>
                        <dg:DataGridColumn Title="TaskEndTime" PropertyName="TaskEndTime"/>
                        <dg:DataGridColumn Title="TaskTimeTaken" PropertyName="TaskTimeTaken"/>
                        <dg:DataGridColumn Title="ProjectName" PropertyName="ProjectName"/>
                    </dg:DataGrid.Columns>
                    <dg:DataGrid.RowsBackgroundColorPalette>
                        <dg:PaletteCollection>
                            <Color>#12F2F2</Color>
                            <Color>#FFFFFF</Color>
                        </dg:PaletteCollection>
                    </dg:DataGrid.RowsBackgroundColorPalette>
                </dg:DataGrid>


                <StackLayout Orientation="Horizontal" HorizontalOptions="Center">
                    <Button Text="Edit" Margin="10" IsEnabled="{Binding taskvm.isselected}" Command="{Binding taskvm.OpenTaskEditPopupCommand}"/>
                    <Button Text="Delete" Margin="10" Command="{Binding taskvm.DeleteTaskCommand}" IsEnabled="{Binding taskvm.isselected}"/>
                    <Button Text="Refresh" Margin="10" Command="{Binding taskvm.RefreashCommandCommand}"/>
                </StackLayout>
            </StackLayout>-->
            <!--#endregion-->

            <!--#region ToDoList -->
            <StackLayout Grid.Row="2" x:Name="ToDoListContainer" IsVisible="{Binding IsToDoListVisible}">
                <Label Text="To Do List" FontSize="Medium" HorizontalOptions="Center"/>

                <!--DataGrid-->
                <dg:DataGrid
                BorderColor="DarkBlue"
                HeaderBackground="#FFF"
                ItemsSource="{Binding todovm.ToDos}"
                SelectionMode="Single"
                SelectedItem="{Binding todovm.SelectedItem}"
                PullToRefreshCommand="{Binding todovm.RefreashCommandCommand}"
                IsRefreshing="{Binding todovm.IsRefreshing}"
                ActiveRowColor="LightCyan"
                x:Name="_dataGrid1"
                PaginationEnabled="{Binding todovm.IsPagination}"
                PageSize="5"
                HeightRequest="280"
                >
                    <dg:DataGrid.Columns>
                        <dg:DataGridColumn Title="Id" PropertyName="id" IsVisible="False"/>
                        <dg:DataGridColumn Title="ToDo" PropertyName="ToDoTask"/>
                        <dg:DataGridColumn Title="Comments" PropertyName="ToDoComments"/>
                        <dg:DataGridColumn Title="Status" PropertyName="Status"/>
                        <dg:DataGridColumn Title="Add Date" PropertyName="AddDate"/>
                        <dg:DataGridColumn Title="Edit Date" PropertyName="EditDate"/>
                    </dg:DataGrid.Columns>
                    <!--<dg:DataGrid.RowsBackgroundColorPalette>
                        <dg:PaletteCollection>
                            <Color>#12F2F2</Color>
                            <Color>#FFFFFF</Color>
                        </dg:PaletteCollection>
                    </dg:DataGrid.RowsBackgroundColorPalette>-->
                </dg:DataGrid>


                <StackLayout Orientation="Horizontal" HorizontalOptions="Center">
                    <Button Text="Add ToDo" Margin="10" Command="{Binding todovm.OpenAddTodoPopupCommand}"/>
                    <Button Text="Edit" Margin="10" IsEnabled="{Binding todovm.isselected}" Command="{Binding todovm.EditToDoItemCommand}"/>
                    <Button Text="Delete" Margin="10" Command="{Binding todovm.DeleteToDoItemCommand}" IsEnabled="{Binding todovm.isselected}"/>
                    <Button Text="Refresh" Margin="10" Command="{Binding todovm.RefreashCommandCommand}"/>
                </StackLayout>
            </StackLayout>
            <!--#endregion-->



        </Grid>
    </ScrollView>
</ContentPage>
